{"version":3,"sources":["utils/erc20.ts","hooks/useApprove.ts","views/Home/components/CardValue.tsx","../node_modules/react-countup/build/index.js","../node_modules/warning/warning.js","../node_modules/countup.js/dist/countUp.min.js","hooks/useTokenBalance.ts","utils/forestUtils.ts","views/KingOfElephants/components/Hero.tsx","views/KingOfElephants/components/TillCollapseCard.tsx","views/KingOfElephants/components/WoodButto.tsx","views/KingOfElephants/components/ParticipateCard.tsx","hooks/useAllowance.ts","hooks/usePastEvents.ts","views/KingOfElephants/components/LastEventsCard.tsx","views/KingOfElephants/components/ActualKing.tsx","views/KingOfElephants/Elephants.tsx"],"names":["getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","useApprove","dispatch","useDispatch","useWallet","useMasterchef","onApprove","useCallback","approve","tx","fetchFarmUserDataAsync","useSousApprove","sousId","smartChefContract","useSmartChef","updateUserAllowance","String","useForestApprove","cakeContract","useCake","forestContract","useForest","CardValue","value","decimals","fontSize","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","useEffect","current","bold","_interopDefault","ex","Object","defineProperty","exports","PropTypes","require","React","React__default","warning","CountUp$1","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_defineProperty","obj","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_slicedToArray","arr","Array","isArray","_arrayWithHoles","Symbol","iterator","prototype","toString","_arr","_n","_d","_e","_s","_i","next","done","err","_iterableToArrayLimit","_nonIterableRest","createCountUpInstance","el","decimal","easingFn","formattingFn","suffix","useEasing","useGrouping","CountUp","_Component","_getPrototypeOf2","_this","this","_len","arguments","args","_key","concat","children","containerRef","HTMLElement","SVGTextElement","SVGTSpanElement","_assertThisInitialize","reset","restart","onPauseResume","pauseResume","_assertThisInitialize2","onReset","_assertThisInitialize3","_this$props","delay","onEnd","onStart","run","timeoutId","setTimeout","newEnd","_assertThisInitialize4","onUpdate","createRef","protoProps","staticProps","subClass","superClass","create","constructor","_inherits","_this$props2","createInstance","nextProps","_this$props3","redraw","prevProps","_this$props4","preserveValue","clearTimeout","_this$props5","className","style","countUpRef","createElement","ref","Component","string","number","func","isRequired","bool","startOnMount","MOCK_ELEMENT","innerHTML","default","_props","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread2","defaultProps","_useState2","useState","count","setCount","getCountUp","newCountUp","formattingFnRef","result","timeout","module","define","n","t","e","r","s","Math","abs","toFixed","l","split","numerals","replace","pow","u","isNaN","version","m","hasOwnProperty","d","c","f","window","requestAnimationFrame","cancelAnimationFrame","Date","getTime","max","initialize","initialized","error","document","getElementById","startVal","Number","endVal","dec","countDown","frameVal","printValue","tagName","textContent","startTime","timestamp","remaining","round","rAF","callback","paused","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","cakeABI","getCakeAddress","supply","BigNumber","fetchTotalSupply","useBurnedBalance","setBalance","bal","fetchBalance","useTokenBalance","_account","_provider","useAccount","ethereum","fastRefresh","currentProvider","res","getLastBidTime","lastBidTime","getLastBidder","lastBidder","getHasWinner","hasWinner","getNextStartTime","nextStartTime","getBidAmount","bidAmount","getEndDelay","endDelay","getAllForestData","parseInt","_endDelay","endOfAuction","Title","styled","Heading","attrs","as","size","theme","colors","secondary","Blurb","Text","StyledHero","div","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","Hero","TranslateString","useI18n","color","StyledCard","Card","Adventure","TillCollapseCard","getForestAddress","getRpcUrl","seedPriceInUsd","usePriceCakeBusd","balanceInUsd","multipliedBy","isWaitingForNextGame","now","isRunning","mb","parseFloat","getFullDisplayBalance","marginTop","UnlockButton","mr","mt","StyledDiv","StyledSpan","span","WoodButton","onBid","disabled","text","currentText","onClick","StyledTokenViewer","input","radii","spacing","ParticipateCard","setAllowance","fetchAllowance","refreshInterval","setInterval","clearInterval","useForestAllowance","pendingTx","setPendingTx","fullBalance","useMemo","bid","getBalanceNumber","onSubmit","participateForest","console","handleApprove","toNumber","WoodButto","variant","fullWidth","getPastEventsByBlocksStep","eventName","step","web3","getWeb3","getBlockNumber","lastBlockNumber","currentBlock","chunks","min","Promise","all","map","chunk","getPastEvents","fromBlock","toBlock","then","chunksData","data","events","usePastEvents","loading","setLoading","fetchEvents","fetch","Events","formatWins","wins","win","type","author","returnValues","amount","formatBids","bids","LastEventsCard","setData","loadingWins","fetchWins","loadingBids","fetchBids","sort","b","blockNumber","slice","catch","info","lastEvents","useLastEvents","event","alignItems","justifyContent","marginRight","href","transactionHash","external","ActualKing","isClaiming","setIsClaiming","onClaim","claimForest","ml","Cards","BaseLayout","BottomCardBody","CardBody","Forest","forestData","setForestData","ultraRefresh","marginLeft","allForestData","Page"],"mappings":"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","file":"static/js/15.44d0e6d6.chunk.js","sourcesContent":["import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useLottery, useSmartChef, useForest } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const smartChefContract = useSmartChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, smartChefContract, account)\r\n      dispatch(updateUserAllowance(String(sousId), account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, smartChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n\r\n// Approve the forest\r\nexport const useForestApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const forestContract = useForest()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, forestContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, forestContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  prefix?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold fontSize={fontSize}>\r\n      {prefix}{countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar PropTypes = _interopDefault(require('prop-types'));\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar warning = _interopDefault(require('warning'));\nvar CountUp$1 = _interopDefault(require('countup.js'));\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar createCountUpInstance = function createCountUpInstance(el, props) {\n  var decimal = props.decimal,\n      decimals = props.decimals,\n      duration = props.duration,\n      easingFn = props.easingFn,\n      end = props.end,\n      formattingFn = props.formattingFn,\n      prefix = props.prefix,\n      separator = props.separator,\n      start = props.start,\n      suffix = props.suffix,\n      useEasing = props.useEasing;\n  return new CountUp$1(el, start, end, decimals, duration, {\n    decimal: decimal,\n    easingFn: easingFn,\n    formattingFn: formattingFn,\n    separator: separator,\n    prefix: prefix,\n    suffix: suffix,\n    useEasing: useEasing,\n    useGrouping: !!separator\n  });\n};\n\nvar CountUp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CountUp, _Component);\n\n  function CountUp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CountUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CountUp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"createInstance\", function () {\n      if (typeof _this.props.children === 'function') {\n        // Warn when user didn't use containerRef at all\n        warning(_this.containerRef.current && (_this.containerRef.current instanceof HTMLElement || _this.containerRef.current instanceof SVGTextElement || _this.containerRef.current instanceof SVGTSpanElement), \"Couldn't find attached element to hook the CountUp instance into! Try to attach \\\"containerRef\\\" from the render prop to a an HTMLElement, eg. <span ref={containerRef} />.\");\n      }\n\n      return createCountUpInstance(_this.containerRef.current, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pauseResume\", function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          reset = _assertThisInitialize.reset,\n          start = _assertThisInitialize.restart,\n          update = _assertThisInitialize.update;\n\n      var onPauseResume = _this.props.onPauseResume;\n\n      _this.instance.pauseResume();\n\n      onPauseResume({\n        reset: reset,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reset\", function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize2.pauseResume,\n          start = _assertThisInitialize2.restart,\n          update = _assertThisInitialize2.update;\n\n      var onReset = _this.props.onReset;\n\n      _this.instance.reset();\n\n      onReset({\n        pauseResume: pauseResume,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"restart\", function () {\n      _this.reset();\n\n      _this.start();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"start\", function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize3.pauseResume,\n          reset = _assertThisInitialize3.reset,\n          start = _assertThisInitialize3.restart,\n          update = _assertThisInitialize3.update;\n\n      var _this$props = _this.props,\n          delay = _this$props.delay,\n          onEnd = _this$props.onEnd,\n          onStart = _this$props.onStart;\n\n      var run = function run() {\n        return _this.instance.start(function () {\n          return onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: start,\n            update: update\n          });\n        });\n      }; // Delay start if delay prop is properly set\n\n\n      if (delay > 0) {\n        _this.timeoutId = setTimeout(run, delay * 1000);\n      } else {\n        run();\n      }\n\n      onStart({\n        pauseResume: pauseResume,\n        reset: reset,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (newEnd) {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize4.pauseResume,\n          reset = _assertThisInitialize4.reset,\n          start = _assertThisInitialize4.restart;\n\n      var onUpdate = _this.props.onUpdate;\n\n      _this.instance.update(newEnd);\n\n      onUpdate({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: start\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", React__default.createRef());\n\n    return _this;\n  }\n\n  _createClass(CountUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          delay = _this$props2.delay;\n      this.instance = this.createInstance(); // Don't invoke start if component is used as a render prop\n\n      if (typeof children === 'function' && delay !== 0) return; // Otherwise just start immediately\n\n      this.start();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this$props3 = this.props,\n          end = _this$props3.end,\n          start = _this$props3.start,\n          suffix = _this$props3.suffix,\n          prefix = _this$props3.prefix,\n          redraw = _this$props3.redraw,\n          duration = _this$props3.duration,\n          separator = _this$props3.separator,\n          decimals = _this$props3.decimals,\n          decimal = _this$props3.decimal;\n      var hasCertainPropsChanged = duration !== nextProps.duration || end !== nextProps.end || start !== nextProps.start || suffix !== nextProps.suffix || prefix !== nextProps.prefix || separator !== nextProps.separator || decimals !== nextProps.decimals || decimal !== nextProps.decimal;\n      return hasCertainPropsChanged || redraw;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // If duration, suffix, prefix, separator or start has changed\n      // there's no way to update the values.\n      // So we need to re-create the CountUp instance in order to\n      // restart it.\n      var _this$props4 = this.props,\n          end = _this$props4.end,\n          start = _this$props4.start,\n          suffix = _this$props4.suffix,\n          prefix = _this$props4.prefix,\n          duration = _this$props4.duration,\n          separator = _this$props4.separator,\n          decimals = _this$props4.decimals,\n          decimal = _this$props4.decimal,\n          preserveValue = _this$props4.preserveValue;\n\n      if (duration !== prevProps.duration || start !== prevProps.start || suffix !== prevProps.suffix || prefix !== prevProps.prefix || separator !== prevProps.separator || decimals !== prevProps.decimals || decimal !== prevProps.decimal) {\n        this.instance.reset();\n        this.instance = this.createInstance();\n        this.start();\n      } // Only end value has changed, so reset and and re-animate with the updated\n      // end value.\n\n\n      if (end !== prevProps.end) {\n        if (!preserveValue) {\n          this.instance.reset();\n        }\n\n        this.instance.update(end);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n      }\n\n      this.instance.reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          style = _this$props5.style;\n      var containerRef = this.containerRef,\n          pauseResume = this.pauseResume,\n          reset = this.reset,\n          restart = this.restart,\n          update = this.update;\n\n      if (typeof children === 'function') {\n        return children({\n          countUpRef: containerRef,\n          pauseResume: pauseResume,\n          reset: reset,\n          start: restart,\n          update: update\n        });\n      }\n\n      return React__default.createElement(\"span\", {\n        className: className,\n        ref: containerRef,\n        style: style\n      });\n    }\n  }]);\n\n  return CountUp;\n}(React.Component);\n\n_defineProperty(CountUp, \"propTypes\", {\n  decimal: PropTypes.string,\n  decimals: PropTypes.number,\n  delay: PropTypes.number,\n  easingFn: PropTypes.func,\n  end: PropTypes.number.isRequired,\n  formattingFn: PropTypes.func,\n  onEnd: PropTypes.func,\n  onStart: PropTypes.func,\n  prefix: PropTypes.string,\n  redraw: PropTypes.bool,\n  separator: PropTypes.string,\n  start: PropTypes.number,\n  startOnMount: PropTypes.bool,\n  suffix: PropTypes.string,\n  style: PropTypes.object,\n  useEasing: PropTypes.bool,\n  preserveValue: PropTypes.bool\n});\n\n_defineProperty(CountUp, \"defaultProps\", {\n  decimal: '.',\n  decimals: 0,\n  delay: null,\n  duration: null,\n  easingFn: null,\n  formattingFn: null,\n  onEnd: function onEnd() {},\n  onPauseResume: function onPauseResume() {},\n  onReset: function onReset() {},\n  onStart: function onStart() {},\n  onUpdate: function onUpdate() {},\n  prefix: '',\n  redraw: false,\n  separator: '',\n  start: 0,\n  startOnMount: true,\n  suffix: '',\n  style: undefined,\n  useEasing: true,\n  preserveValue: false\n});\n\n// and just sets the innerHTML of the element.\n\nvar MOCK_ELEMENT = {\n  innerHTML: null\n};\n\nvar useCountUp = function useCountUp(props) {\n  var _props = _objectSpread2({}, CountUp.defaultProps, {}, props);\n\n  var start = _props.start,\n      formattingFn = _props.formattingFn;\n\n  var _useState = React.useState(typeof formattingFn === 'function' ? formattingFn(start) : start),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var countUpRef = React.useRef(null);\n\n  var createInstance = function createInstance() {\n    var countUp = createCountUpInstance(MOCK_ELEMENT, _props);\n    var formattingFnRef = countUp.options.formattingFn;\n\n    countUp.options.formattingFn = function () {\n      var result = formattingFnRef.apply(void 0, arguments);\n      setCount(result);\n    };\n\n    return countUp;\n  };\n\n  var getCountUp = function getCountUp() {\n    var countUp = countUpRef.current;\n\n    if (countUp !== null) {\n      return countUp;\n    }\n\n    var newCountUp = createInstance();\n    countUpRef.current = newCountUp;\n    return newCountUp;\n  };\n\n  var reset = function reset() {\n    var onReset = _props.onReset;\n    getCountUp().reset();\n    onReset({\n      pauseResume: pauseResume,\n      start: restart,\n      update: update\n    });\n  };\n\n  var restart = function restart() {\n    var onStart = _props.onStart,\n        onEnd = _props.onEnd;\n    getCountUp().reset();\n    getCountUp().start(function () {\n      onEnd({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: restart,\n        update: update\n      });\n    });\n    onStart({\n      pauseResume: pauseResume,\n      reset: reset,\n      update: update\n    });\n  };\n\n  var pauseResume = function pauseResume() {\n    var onPauseResume = _props.onPauseResume;\n    getCountUp().pauseResume();\n    onPauseResume({\n      reset: reset,\n      start: restart,\n      update: update\n    });\n  };\n\n  var update = function update(newEnd) {\n    var onUpdate = _props.onUpdate;\n    getCountUp().update(newEnd);\n    onUpdate({\n      pauseResume: pauseResume,\n      reset: reset,\n      start: restart\n    });\n  };\n\n  React.useEffect(function () {\n    var delay = _props.delay,\n        onStart = _props.onStart,\n        onEnd = _props.onEnd,\n        startOnMount = _props.startOnMount;\n\n    if (startOnMount) {\n      var timeout = setTimeout(function () {\n        onStart({\n          pauseResume: pauseResume,\n          reset: reset,\n          update: update\n        });\n        getCountUp().start(function () {\n          clearTimeout(timeout);\n          onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: restart,\n            update: update\n          });\n        });\n      }, delay * 1000);\n    }\n\n    return reset;\n  }, []);\n  return {\n    countUp: count,\n    start: restart,\n    pauseResume: pauseResume,\n    reset: reset,\n    update: update\n  };\n};\n\nexports.default = CountUp;\nexports.useCountUp = useCountUp;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","!function(a,n){\"function\"==typeof define&&define.amd?define(n):\"object\"==typeof exports?module.exports=n(require,exports,module):a.CountUp=n()}(this,function(a,n,t){var e=function(a,n,t,e,i,r){function o(a){var n,t,e,i,r,o,s=a<0;if(a=Math.abs(a).toFixed(l.decimals),a+=\"\",n=a.split(\".\"),t=n[0],e=n.length>1?l.options.decimal+n[1]:\"\",l.options.useGrouping){for(i=\"\",r=0,o=t.length;r<o;++r)0!==r&&r%3===0&&(i=l.options.separator+i),i=t[o-r-1]+i;t=i}return l.options.numerals.length&&(t=t.replace(/[0-9]/g,function(a){return l.options.numerals[+a]}),e=e.replace(/[0-9]/g,function(a){return l.options.numerals[+a]})),(s?\"-\":\"\")+l.options.prefix+t+e+l.options.suffix}function s(a,n,t,e){return t*(-Math.pow(2,-10*a/e)+1)*1024/1023+n}function u(a){return\"number\"==typeof a&&!isNaN(a)}var l=this;if(l.version=function(){return\"1.9.3\"},l.options={useEasing:!0,useGrouping:!0,separator:\",\",decimal:\".\",easingFn:s,formattingFn:o,prefix:\"\",suffix:\"\",numerals:[]},r&&\"object\"==typeof r)for(var m in l.options)r.hasOwnProperty(m)&&null!==r[m]&&(l.options[m]=r[m]);\"\"===l.options.separator?l.options.useGrouping=!1:l.options.separator=\"\"+l.options.separator;for(var d=0,c=[\"webkit\",\"moz\",\"ms\",\"o\"],f=0;f<c.length&&!window.requestAnimationFrame;++f)window.requestAnimationFrame=window[c[f]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[c[f]+\"CancelAnimationFrame\"]||window[c[f]+\"CancelRequestAnimationFrame\"];window.requestAnimationFrame||(window.requestAnimationFrame=function(a,n){var t=(new Date).getTime(),e=Math.max(0,16-(t-d)),i=window.setTimeout(function(){a(t+e)},e);return d=t+e,i}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)}),l.initialize=function(){return!!l.initialized||(l.error=\"\",l.d=\"string\"==typeof a?document.getElementById(a):a,l.d?(l.startVal=Number(n),l.endVal=Number(t),u(l.startVal)&&u(l.endVal)?(l.decimals=Math.max(0,e||0),l.dec=Math.pow(10,l.decimals),l.duration=1e3*Number(i)||2e3,l.countDown=l.startVal>l.endVal,l.frameVal=l.startVal,l.initialized=!0,!0):(l.error=\"[CountUp] startVal (\"+n+\") or endVal (\"+t+\") is not a number\",!1)):(l.error=\"[CountUp] target is null or undefined\",!1))},l.printValue=function(a){var n=l.options.formattingFn(a);\"INPUT\"===l.d.tagName?this.d.value=n:\"text\"===l.d.tagName||\"tspan\"===l.d.tagName?this.d.textContent=n:this.d.innerHTML=n},l.count=function(a){l.startTime||(l.startTime=a),l.timestamp=a;var n=a-l.startTime;l.remaining=l.duration-n,l.options.useEasing?l.countDown?l.frameVal=l.startVal-l.options.easingFn(n,0,l.startVal-l.endVal,l.duration):l.frameVal=l.options.easingFn(n,l.startVal,l.endVal-l.startVal,l.duration):l.countDown?l.frameVal=l.startVal-(l.startVal-l.endVal)*(n/l.duration):l.frameVal=l.startVal+(l.endVal-l.startVal)*(n/l.duration),l.countDown?l.frameVal=l.frameVal<l.endVal?l.endVal:l.frameVal:l.frameVal=l.frameVal>l.endVal?l.endVal:l.frameVal,l.frameVal=Math.round(l.frameVal*l.dec)/l.dec,l.printValue(l.frameVal),n<l.duration?l.rAF=requestAnimationFrame(l.count):l.callback&&l.callback()},l.start=function(a){l.initialize()&&(l.callback=a,l.rAF=requestAnimationFrame(l.count))},l.pauseResume=function(){l.paused?(l.paused=!1,delete l.startTime,l.duration=l.remaining,l.startVal=l.frameVal,requestAnimationFrame(l.count)):(l.paused=!0,cancelAnimationFrame(l.rAF))},l.reset=function(){l.paused=!1,delete l.startTime,l.initialized=!1,l.initialize()&&(cancelAnimationFrame(l.rAF),l.printValue(l.startVal))},l.update=function(a){if(l.initialize()){if(a=Number(a),!u(a))return void(l.error=\"[CountUp] update() - new endVal is not a number: \"+a);l.error=\"\",a!==l.frameVal&&(cancelAnimationFrame(l.rAF),l.paused=!1,delete l.startTime,l.startVal=l.frameVal,l.endVal=a,l.countDown=l.startVal>l.endVal,l.rAF=requestAnimationFrame(l.count))}},l.initialize()&&l.printValue(l.startVal)};return e});","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport {getLotteryAddress, getCakeAddress} from 'utils/addressHelpers'\r\nimport multicall from 'utils/multicall'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport useRefresh from './useRefresh'\r\n\r\n// const useTokenBalance = (tokenAddress: string) => {\r\n//   const [balance, setBalance] = useState(new BigNumber(0))\r\n//   const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n//   const { fastRefresh } = useRefresh()\r\n//\r\n//   useEffect(() => {\r\n//     const fetchBalance = async () => {\r\n//       const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n//       setBalance(new BigNumber(res))\r\n//     }\r\n//\r\n//     if (account && ethereum) {\r\n//       fetchBalance()\r\n//     }\r\n//   }, [account, ethereum, tokenAddress, fastRefresh])\r\n//\r\n//   return balance\r\n// }\r\n\r\nconst useTokenBalance = (tokenAddress: string, _account?: string, _provider?: any) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account: useAccount, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n  const account = _account || useAccount;\r\n  const currentProvider = _provider || ethereum;\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(currentProvider, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && currentProvider) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, currentProvider, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useLotteryLockedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const burnAddress = getLotteryAddress()\r\n      const [burnedCakeBalance] = await multicall(erc20, [\r\n        {\r\n          address: tokenAddress,\r\n          name: 'balanceOf',\r\n          params: [burnAddress],\r\n        },\r\n      ])\r\n\r\n      if (!burnedCakeBalance) return\r\n\r\n      setBalance(new BigNumber(burnedCakeBalance))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [slowRefresh, tokenAddress])\r\n\r\n  if (!balance) {\r\n    return new BigNumber(0)\r\n  }\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","const getLastBidTime = (forestContract) => {\n    return forestContract.methods.lastBidTime().call()\n  }\n  \n   const getLastBidder = (forestContract) => {\n    return forestContract.methods.lastBidder().call()\n  }\n  \n   const getHasWinner = (forestContract) => {\n    return forestContract.methods.hasWinner().call()\n  }\n  \n   const getNextStartTime = (forestContract) => {\n    return forestContract.methods.nextStartTime().call()\n  }\n  \n   const getBidAmount = (forestContract) => {\n    return forestContract.methods.bidAmount().call()\n  }\n  \n  const getEndDelay = (forestContract) => {\n    return forestContract.methods.endDelay().call()\n  }\n  \n  // export const getCollapseData = async (forestContract) => {\n  //   const lastBidTime = parseInt(await getLastBidTime(forestContract))\n  //   const endDelay = parseInt(await getEndDelay(forestContract))\n  \n  //   return {\n  //     lastBidTime,\n  //     endDelay,\n  //     collapseDate: (lastBidTime + endDelay) * 1000,\n  //   }\n  // }\n  \n  // Fetch all data in one function\n  // It would be better to have a structure to fetch from the smart contract\n  \n  // eslint-disable-next-line import/prefer-default-export\n  export const getAllForestData = async (forestContract) => {\n    const lastBidder = await getLastBidder(forestContract)\n    const hasWinner = await getHasWinner(forestContract)\n    const nextStartTime = await getNextStartTime(forestContract)\n    const bidAmount = await getBidAmount(forestContract)\n    const lastBidTime = parseInt(await getLastBidTime(forestContract))\n    const _endDelay = parseInt(await getEndDelay(forestContract))\n    const endOfAuction = (lastBidTime + _endDelay) * 1000\n    return {\n      lastBidTime,\n      lastBidder,\n      hasWinner,\n      nextStartTime,\n      bidAmount,\n      endOfAuction,\n    }\n  }","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\n// import { useGetMaxBet } from 'hooks/useMaxBet'\n// import { useMoneyWheel, useCake } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background: linear-gradient(rgb(142 199 97) 0%, rgb(59 183 143) 76.22%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 2em;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title style={{ color: 'white' }}>{TranslateString(999, 'KING of the Elephants 🐘')}</Title>\n          <Blurb>{TranslateString(999, 'Battle other users to become the new king !')}</Blurb>\n          <h4 style={{ color: 'white' }}>{TranslateString(999, 'Win 50% of the pot, next pot 20%, and burn 30%')}</h4>\n        </LeftWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","\nimport React from 'react'\nimport styled from 'styled-components'\n// import Countdown from 'react-countdown'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n// import { claimForest } from 'utils/callHelpers'\n// import { useForest } from 'hooks/useContract'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress, getForestAddress } from 'utils/addressHelpers'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardValue from 'views/Home/components/CardValue'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n// import useRefresh from 'hooks/useRefresh'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport UnlockButton from 'components/UnlockButton'\n\n\nconst StyledCard = styled(Card)`\n  min-height: 365px;\n  background-image: url(/images/forest/ForestBackground6.gif);\n  background-position: center right;\n  background-repeat: repeat;\n  background-size: cover;\n`\n\nconst Adventure = styled.div`\n    background: -webkit-linear-gradient(#c91919, #f5ff00);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n`\n\nconst QuesionHelperPositioner = styled.div`\n  margin-top: 10px;\n  margin-right: 10px;\n  float: right;\n`\n\ninterface TillCollapseCardProps {\n  hasWinner,\n  nextStartTime,\n  lastBidTime,\n  endOfAuction,\n}\n\nconst TillCollapseCard: React.FC<TillCollapseCardProps> = ({ hasWinner, nextStartTime, lastBidTime, endOfAuction }) => {\n  // const forestContract = useForest()\n  const balance = useTokenBalance(getCakeAddress(), getForestAddress(), getRpcUrl())\n  const seedPriceInUsd = usePriceCakeBusd()\n  const balanceInUsd = balance.multipliedBy(seedPriceInUsd)\n  // const [isClaiming, setIsClaiming] = useState(false)\n  const { account } = useWallet()\n  // const onClaim = async () => {\n  //   setIsClaiming(true)\n  //   try {\n  //     await claimForest(forestContract, account)  \n  //   } catch (e) {\n  //     console.error(e)\n  //   }\n  //   setIsClaiming(false)\n  // }\n\n  // Check if is time to start a new game\n  const isWaitingForNextGame = nextStartTime * 1000 > Date.now()\n\n  // const isEnding = endData && endData.lastBidTime !== 0\n  const isRunning = lastBidTime !== 0\n\n  // DEBUG DATA\n  // const obj = { isWaitingForNextGame, isRunning, hasWinner, nextStartTime, lastBidTime, endOfAuction }\n  // console.log('DEBUG FOREST DATA =>', obj)\n\n  return (\n    <StyledCard>\n      <CardBody>\n        {isWaitingForNextGame ? (\n          <Text fontSize=\"60px\" mb=\"10px\" color=\"primary\">\n            <Adventure>Next Round</Adventure>\n            {/* <Countdown date={nextStartTime * 1000}/> */}\n            <br/>\n            <Text fontSize=\"30px\" color=\"primary\">Prepare for battle!</Text>\n          </Text>\n        ) : (\n          <>\n            <Heading size=\"xl\" mb=\"10px\" color=\"primary\">\n              Round status\n            </Heading>\n            {isRunning ? (\n              <div>\n              {/* <Text fontSize=\"60px\" mb=\"10px\" color=\"primary\">\n                {hasWinner ? <Adventure>Waiting for claim</Adventure> : <Countdown key={endOfAuction} date={endOfAuction}/>}\n              </Text> */}\n              </div>\n            ) : (\n              <div>\n              \n              <Text  fontSize=\"60px\" mb=\"10px\" color=\"primary\">\n                <Adventure>Waiting for Bids</Adventure>\n              </Text>\n              </div>\n            )}\n            <Heading size=\"xl\" mb=\"10px\" color=\"primary\">\n              Pot\n              <CardValue value={parseFloat(getFullDisplayBalance(balance))} decimals={2} />\n              <CardValue\n                value={parseFloat(getFullDisplayBalance(balanceInUsd))}\n                prefix=\"~$\"\n                decimals={2}\n                fontSize=\"24px\"\n              />\n            </Heading>\n          </>\n        )}\n        <Text marginTop=\"20px\">\n          {!account && <UnlockButton mr=\"10px\" mt=\"20px\" />}\n          {/* hasWinner && account && (\n            <Button ml=\"10px\" onClick={onClaim} disabled={isClaiming} mt=\"20px\">\n              Restart Game\n            </Button>\n          ) */}\n        </Text>\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TillCollapseCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  position: relative;\n  color: primary;\n  font-size: 26px;\n  border-radius: 4px;\n  width: 100%;\n  height: 70px;\n  background: url('images/forest/king_button.gif');\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  cursor: pointer;\n  `\n\n  const StyledSpan = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst WoodButton = ({onBid, disabled, text}) => {\n    const currentText = disabled ? 'Waiting...' : text\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const onClick= disabled ? () => {} : onBid\n    return (\n    <StyledDiv onClick={onClick}>\n        <StyledSpan>{currentText}</StyledSpan>\n    </StyledDiv>\n  )\n}\n\nexport default WoodButton\n","/* eslint-disable */\nimport React, { useState, useCallback, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useForest } from 'hooks/useContract'\nimport { getFullDisplayBalance, getBalanceNumber } from 'utils/formatBalance'\nimport BigNumber from 'bignumber.js'\nimport { useForestApprove } from 'hooks/useApprove'\nimport { useForestAllowance } from 'hooks/useAllowance'\nimport UnlockButton from 'components/UnlockButton'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { participateForest } from 'utils/callHelpers'\nimport WoodButton from './WoodButto'\n\nconst StyledTokenViewer = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCard = styled(Card)``\ninterface ParticipateCardProps {\n  hasWinner\n  nextStartTime\n  bidAmount\n}\n\nconst QuesionHelperPositioner = styled.div`\n  margin-top: 10px;\n  margin-right: 10px;\n  float: right;\n`\n\nconst ParticipateCard: React.FC<ParticipateCardProps> = ({ hasWinner, nextStartTime, bidAmount }) => {\n  const forestContract = useForest()\n  const max = useTokenBalance(getCakeAddress())\n  const allowance = useForestAllowance()\n  const { onApprove } = useForestApprove()\n  const { account } = useWallet()\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  // const forestBalance = useMemo(() => parseFloat(getFullDisplayBalance(balance)), [balance])\n  // const bid = (forestBalance * 0.012).toFixed(10)\n\n  const bid = getBalanceNumber(new BigNumber(bidAmount)).toFixed(10)\n\n  const onSubmit = async () => {\n    try {\n      setPendingTx(true)\n      await participateForest(forestContract, bid, account)\n      setPendingTx(false)\n    } catch (e) {\n      console.error(e)\n      setPendingTx(false)\n    }\n  }\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setPendingTx(true)\n      await onApprove()\n      setPendingTx(false)\n    } catch (e) {\n      console.error(e)\n      setPendingTx(false)\n    }\n  }, [onApprove])\n\n  const isWaitingForNextGame = nextStartTime * 1000 > Date.now()\n\n  return (\n    <StyledCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          Bid Now!\n        </Heading>\n\n        {!account ? (\n          <UnlockButton />\n        ) : (\n          <>\n            <StyledTokenViewer>\n              <Text color=\"primary\" fontSize=\"24px\">\n                {parseFloat(bid).toFixed(1)} STAR\n              </Text>\n              <Text color=\"primary\" bold fontSize=\"16px\">\n                your balance {parseFloat(fullBalance).toFixed(2)} STAR\n              </Text>\n            </StyledTokenViewer>\n            <Flex mt=\"20px\">\n              {!allowance.toNumber() ? (\n                <Button onClick={handleApprove} variant=\"primary\" fullWidth disabled={pendingTx}>\n                  Approve contract\n                </Button>\n              ) : !hasWinner ? (\n                /* {\n                <div>\n                  <Button onClick={onSubmit} fullWidth disabled={pendingTx || isWaitingForNextGame}>\n                    Bid Now\n                  </Button>\n                  <BidNow />\n                </div>} */\n                <WoodButton onBid={onSubmit} disabled={pendingTx || isWaitingForNextGame} text=\"Bid Now\"/>\n              ) : (\n                <WoodButton onBid={onSubmit} disabled text=\"Waiting for Claim\" />\n              )}\n            </Flex>\n          </>\n        )}\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default ParticipateCard","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery, useForest } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n\r\nexport const useForestAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const forestContract = useForest()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, forestContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, forestContract])\r\n\r\n  return allowance\r\n}\r\n","import { useCallback, useState } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\n// it is called 2 times every fastRefresh (one for bid and one for win events)\nconst getPastEventsByBlocksStep = async (\n  contract: any,\n  eventName: string,\n  // fromBlock = '0',\n  filter: any = {},\n  step = 5000,\n) => {\n  const web3 = getWeb3()\n\n  \n\n  const lastBlockNumber: number = await web3.eth.getBlockNumber()\n\n  // Just ignore fromBlock parameter which is hardcoded and casues issues on metamask when the number of calls increases\n  // let currentBlock = parseInt(fromBlock)\n  // go back to 5000 blocks instead (approx 5 minutes history) and collect that data\n  // with a step of 5000 it means that we have only 1 chunk\n  let currentBlock = lastBlockNumber - 5000\n\n  const diff = lastBlockNumber - currentBlock\n  if (diff <= 0) return []\n\n  const chunks = []\n\n  while (currentBlock < lastBlockNumber) {\n    chunks.push([currentBlock, Math.min(currentBlock + step, lastBlockNumber)])\n\n    currentBlock += step\n  }\n\n  // console.log('chunks', chunks)\n  const events: any[] = await Promise.all(\n    chunks.map((chunk) => {\n      // console.log('call', chunk[0], chunk[1])\n      return contract.getPastEvents(eventName, {\n        filter,\n        fromBlock: chunk[0],\n        toBlock: chunk[1],\n      })\n    }),\n  ).then((chunksData) => {\n    let data = []\n    chunksData.forEach((chunk) => {\n      // console.log('single chung data', chunk)\n      data = data.concat(chunk)\n    })\n    return data\n  })\n\n  return events\n}\n\nconst usePastEvents = (contract, eventName: string, filter: any = undefined) => {\n  const [loading, setLoading] = useState(false)\n  const fetchEvents = useCallback(async () => {\n    setLoading(true)\n    let data = []\n    try {\n      data = await getPastEventsByBlocksStep(contract, eventName, '6953142', filter)\n    } catch (e) {\n      console.error(e)\n    }\n    setLoading(false)\n    return data\n  }, [contract, eventName, filter])\n\n  return {\n    loading,\n    fetch: fetchEvents,\n  }\n}\n\nexport default usePastEvents\n","\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { useForest } from 'hooks/useContract'\nimport useRefresh from 'hooks/useRefresh'\nimport usePastEvents from 'hooks/usePastEvents'\nimport styled from 'styled-components'\nimport { Card, CardBody, Flex, Heading, Link, Text } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport BigNumber from 'bignumber.js'\nimport CardValue from 'views/Home/components/CardValue'\n\nconst StyledCard = styled(Card)``\n\nconst QuesionHelperPositioner = styled.div`\n  margin-top: 10px;\n  margin-right: 10px;\n  float: right;\n`\n\nconst Events = styled.div`\n  max-height: 300px;\n  overflow-y: auto;\n`\n\nconst formatWins = (wins) => {\n  return wins.map((win) => {\n    return {\n      ...win,\n      type: 'WIN',\n      author: win.returnValues.author,\n      amount: win.returnValues.amount,\n    }\n  })\n}\n\nconst formatBids = (bids) => {\n  return bids.map((bid) => {\n    return {\n      ...bid,\n      type: 'BID',\n      author: bid.returnValues.author,\n      amount: bid.returnValues.amount,\n    }\n  })\n}\n\n// const formatCollapses = (collapses) => {\n//   return collapses.map((collapse) => {\n//     return {\n//       ...collapse,\n//       type: 'COLLAPSE',\n//       author: '0x000000000000000000000000000000000000dEaD',\n//       amount: collapse.returnValues.amount,\n//     }\n//   })\n// }\n\nconst useLastEvents = () => {\n  const forestContract = useForest()\n  const [data, setData] = useState([])\n  const { fastRefresh } = useRefresh()\n  const { loading: loadingWins, fetch: fetchWins } = usePastEvents(forestContract, 'OnWin')\n  const { loading: loadingBids, fetch: fetchBids } = usePastEvents(forestContract, 'OnBid')\n\n  // Taking the last 40 events between wins and bids\n  const fetchEvents = useCallback(async () => {\n    const lastEvents = await Promise.all([fetchWins(), fetchBids()])\n      .then(([wins, bids]) => {\n        const events = [...formatWins(wins), ...formatBids(bids)].sort((a, b) => b.blockNumber - a.blockNumber)\n        return events.slice(0, 40)\n      })\n      .catch((e) => {\n\n        console.info(e)\n        return []\n      })\n\n    setData(lastEvents)\n  }, [fetchWins, fetchBids])\n\n  const loading = loadingWins || loadingBids\n  useEffect(() => {\n    fetchEvents()\n  }, [fastRefresh, fetchEvents])\n  \n  return {\n    loading,\n    data,\n  }\n\n}\n\nconst LastEventsCard = () => {\n  const { data } = useLastEvents()\n  return (\n    <StyledCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          Previous events\n        </Heading>\n        {data.length ? <Events>\n          {data.map((event) => {\n            return (\n              <Flex key={event.transactionHash} alignItems=\"center\" justifyContent=\"space-between\" mb=\"10px\">\n                <Flex alignItems=\"center\">\n                  <Link marginRight=\"20px\" href={`https://explorer-mainnet.maticvigil.com//tx/${event.transactionHash}`} external>\n                    Tx: {event.transactionHash.slice(0, 5)}...{event.transactionHash.slice(-5)}\n                  </Link>\n                  <Text>{event.type}</Text>\n                </Flex>\n                <CardValue\n                  value={parseFloat(getFullDisplayBalance(new BigNumber(event.amount)))}\n                  decimals={4}\n                  fontSize=\"16px\"\n                />\n              </Flex>\n            )\n          })}\n        </Events> : 'There\\'s no recent events'}\n        \n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default LastEventsCard\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport { useForest } from 'hooks/useContract'\nimport { claimForest } from 'utils/callHelpers'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\nconst StyledCard = styled(Card)`\n  background-image: url(/images/egg/last_king2.gif);\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n`\nconst ActualKing = ({ lastBidder, hasWinner }) => {\n  const { account } = useWallet()\n  const forestContract = useForest()\n  const [isClaiming, setIsClaiming] = useState(false)\n  const onClaim = async () => {\n    setIsClaiming(true)\n    try {\n      await claimForest(forestContract, account)\n    } catch (e) {\n      console.error(e)\n    }\n    setIsClaiming(false)\n  }\n\n  return (\n    <StyledCard>\n      <CardBody>\n        <Heading size=\"xl\" mt=\"10px\" mb=\"40px\" color=\"white\">\n          Current King\n        </Heading>\n        {lastBidder && (\n          <Text ml=\"30px\" color=\"white\" fontSize=\"24px\">\n            Last bidder: {lastBidder.slice(0, 8)}...{lastBidder.slice(-8)}\n          </Text>\n        )}\n        <Text marginTop=\"20px\">\n          {hasWinner && account && (\n            <Button onClick={onClaim} disabled={isClaiming} mt=\"20px\" fullWidth>\n              Restart Game\n            </Button>\n          )}\n        </Text>\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default ActualKing","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout, Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport Page from 'components/layout/Page'\n\nimport { useForest } from 'hooks/useContract'\nimport useRefresh from 'hooks/useRefresh'\nimport { getAllForestData } from 'utils/forestUtils'\n// import { useMatchBreakpoints } from '../../../../treedefi-uikit/src/hooks';\n// import QuestionHelper from 'components/QuestionHelper'\nimport Hero from './components/Hero'\nimport TillCollapseCard from './components/TillCollapseCard'\nimport ParticipateCard from './components/ParticipateCard'\nimport LastEventsCard from './components/LastEventsCard'\nimport ActualKing from './components/ActualKing'\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 20px;\n  margin-top: 20px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\nconst BottomCardBody = styled(CardBody)`\n  background-image: url(/images/forest/twines.png);\n  background-position: top center;\n  background-repeat: no-repeat;\n  background-size: 100%;\n`\n\n\n// const QuesionHelperPositioner = styled.div`\n//   margin-top: 10px;\n//   margin-right: 10px;\n//   float: right;\n// `\n\nconst Forest = () => {\n  const forestContract = useForest()\n  const [forestData, setForestData] = useState(null)\n  const { ultraRefresh } = useRefresh()\n  // const { isXl } = useMatchBreakpoints();\n  // const isMobile = isXl === false;\n  // const marginForText = isMobile ? '40px' : '90px'\n  const marginLeft = '10%'\n\n  useEffect(() => {\n    const allForestData = async () => {\n      const data = await getAllForestData(forestContract)\n      setForestData(data)\n    }\n    allForestData()\n  }, [forestContract, ultraRefresh])\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <TillCollapseCard\n          hasWinner={forestData?.hasWinner}\n          nextStartTime={forestData?.nextStartTime}\n          lastBidTime={forestData?.lastBidTime}\n          endOfAuction={forestData?.endOfAuction}\n        />\n        <Cards>\n          <div>\n            <ParticipateCard\n              hasWinner={forestData?.hasWinner}\n              nextStartTime={forestData?.nextStartTime}\n              bidAmount={forestData?.bidAmount}\n            />\n          </div>\n          <ActualKing lastBidder={forestData?.lastBidder} hasWinner={forestData?.hasWinner} />\n        </Cards>\n        <Card>\n          <LastEventsCard />\n        </Card>\n        <Card mt=\"24px\">\n          <BottomCardBody>\n            <Heading mt=\"50px\" ml={marginLeft} mb=\"24px\" size=\"xl\">\n              The King Of Elephants Game Rules\n            </Heading>\n            <Text ml={marginLeft} bold>\n              How to Play?\n            </Text>\n            <Text ml={marginLeft} mb=\"20px\">\n              King of the Elephants has a 120 second countdown timer which resets on each bid.\n            </Text>\n            <Text ml={marginLeft} mb=\"20px\">\n              Bid is in STAR and it goes into the Forest pool balance, allowing you to become the current king.\n            </Text>\n            <Text ml={marginLeft} mb=\"20px\">\n              When the timer reaches zero, the current king wins the game.\n            </Text>\n            <Text ml={marginLeft} mb=\"20px\">\n              Before another game can start one of the users has to press the restart game button.  <br />\n              This resets the contract and refreshes the cooldown timer before a new game begins.\n            </Text>\n            <Text ml={marginLeft} bold>\n              Winning’s distribution?\n            </Text>\n            <Text ml={marginLeft} mb=\"20px\">\n              When the countdown timer ends, Forest pool balance will be distributed as follows: <br />\n              50% credited instantly to winner’s address (last bidder). <br />\n              20% carries over to the next round. <br />\n              30% is burned automatically. <br />\n            </Text>\n            <Text ml={marginLeft} mb=\"20px\">\n              Note: Anyone can click on the claim button but the winning share will go to the last bidder.\n            </Text>\n            <Text ml={marginLeft} mb=\"20px\" color=\"red\" bold>\n              Important Note: All bids are final. Your STAR cannot be returned after bidding.\n            </Text>\n          </BottomCardBody>\n        </Card>\n      </Page>\n    </>\n  )\n}\n\nexport default Forest\n"],"sourceRoot":""}